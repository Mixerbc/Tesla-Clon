---
import Logo from "./Logo.astro"
---




<header id="landing-header" class="py-3  px-10 flex items-center fixed top-0 w-full justify-between z-40 text-black">
    <div class="flex flex-grow basis-0">
    <Logo />
</div>

<nav>
<ul class="flex   [&>li>a]:inline-block [&>li>a]:text-sm [&>li>a]:font-medium [&>li>a]:px-4 [&>li>a]:py-2">
    <li><a href="">Model S</a></li>
    <li><a href="">Model 3</a></li>
    <li><a href="">Model X</a></li>
    <li><a href="">Model Y</a></li>
    <li><a href="">Cybertruck</a></li>
    <li><a href="">Powerwall</a></li>
</ul>

</nav>

<nav class="flex flex-grow justify-end basis-0">
<ul class="flex  [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2 [&>li>a]:text-sm">
    <li><a href="">Tienda</a></li>
    <li><a href="">Cuenta</a></li>
    <li><a href="">Men√∫</a></li>
</ul>


</nav>
<div id="menu-backdrop"
class="absolute  bg-black/5 backdrop-blur-lg rounded
left-[var(--left)] top-[var(--top)] w-[var(--width)]
h-[var(--height)] transition-all duration-500
ease-in-out opacity-0  -z-10">


</div>

</header>

<script>
  
   const  listeItem = document.querySelectorAll("#landing-header li")
   const menuBackdrop = document.querySelector("#menu-backdrop") as HTMLElement
   listeItem.forEach(item =>{

    item.addEventListener("mouseenter",() =>{

      const { left, top, width, height} = item.getBoundingClientRect()
      menuBackdrop.style.setProperty("--left" , `${left}px`)
      menuBackdrop.style.setProperty("--top" , `${top}px`)
      menuBackdrop.style.setProperty("--width" , `${width}px`)
      menuBackdrop.style.setProperty("--height" , `${height}px`)
      menuBackdrop.style.opacity = "1"
      menuBackdrop.style.visibility = "visible"

    })
    item.addEventListener("mouseleave",()=>{

      menuBackdrop.style.opacity = "0"
      menuBackdrop.style.visibility = "hidden"
    })



   })







</script>
<script>
     const headerEl = document.querySelector("#landing-header") as HTMLElement

const observerOptions = {
  root: null,
  rootMargin: "0px", // en cuanto se vea el elemento
  threshold: 0.9, // porcentaje de visibilidad
}

const observer = new IntersectionObserver((entries) => {
  entries.forEach((entry) => {
    const { isIntersecting } = entry
    if (isIntersecting) {
      const color = entry.target.getAttribute("data-header-color")
      headerEl.style.color = color
    }
  })
}, observerOptions)

const sectionElements = document.querySelectorAll(".landing-section")
sectionElements.forEach((section) => observer.observe(section))
    
 

</script>